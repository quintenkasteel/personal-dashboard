{"version":3,"sources":["components/clock/Clock.js"],"names":["DigitalClockContainer","styled","div","DigitalClockItem","span","AnalogClockContainer","AnalogClockContent","AnalogIndicatorCover","Clock","props","child","React","createRef","state","today","Date","startTime","endTime","showMinutes","showSeconds","this","intervalID","setInterval","tick","clearInterval","setState","analog","digital","percentage","currentHour","getHours","currentMinute","getMinutes","currentSecond","getSeconds","workDayLength","calcPercent","showPercent","Math","round","Number","EPSILON","hoursDegrees","minutesDegrees","secondsDegrees","AnalogStyledHours","AnalogStyledMinutes","AnalogStyledSeconds","className","id","toFixed","Component"],"mappings":"whFAGA,IAAMA,EAAwBC,IAAOC,IAAV,KASrBC,EAAmBF,IAAOG,KAAV,KAYhBC,EAAuBJ,IAAOC,IAAV,KAsBpBI,EAAqBL,IAAOC,IAAV,KAWlBK,EAAuBN,IAAOC,IAAV,KAYpBM,E,kDACL,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQC,IAAMC,YACnB,EAAKC,MAAQ,CACTC,MAAO,IAAIC,KACXC,UAAW,EACXC,QAAS,GACZC,aAAa,EACbC,aAAa,GARI,E,gEAWE,IAAD,OACnBC,KAAKC,WAAaC,aAAY,kBAAM,EAAKC,SAAQ,O,6CAGjDC,cAAcJ,KAAKC,c,6BAInBD,KAAKK,SAAS,CACbX,MAAO,IAAIC,S,+BAGH,IAAD,EAC8BK,KAAKP,MAAnCC,EADA,EACAA,MAAOE,EADP,EACOA,UAAWC,EADlB,EACkBA,QADlB,EAEgCG,KAAKX,MAArCiB,EAFA,EAEAA,OAAQC,EAFR,EAEQA,QAASC,EAFjB,EAEiBA,WAEnBC,EAAcf,EAAMgB,WACpBC,EAAgBjB,EAAMkB,aACtBC,EAAgBnB,EAAMoB,aAEtBC,EAAgBlB,EAAUD,EAK1BoB,GAHoBP,EAAcb,GAAamB,EAAiB,IAC3CJ,EAAgB,GAAKI,EAAiB,IACtCF,EAAgB,GAAK,GAAKE,EAAiB,IAEhEE,EAAcC,KAAKC,MAAuC,KAAhCH,EAAcI,OAAOC,UAAkB,IAEjEC,EAA6B,GAAdb,EAAmBE,EAAgB,EAClDY,EAAiC,EAAhBZ,EAAoBE,EAAgB,GACrDW,EAAiC,EAAhBX,EAEjBY,EAAoB5C,IAAOC,IAAV,IACDwC,GAYhBI,EAAsB7C,IAAOC,IAAV,IACHyC,GAYhBI,EAAsB9C,IAAOC,IAAV,IACH0C,GAYtB,OACC,qCACElB,GAAWC,GAAYC,EASpB,KARH,kBAACvB,EAAD,CAAsB2C,UAAU,2BAC/B,kBAAC1C,EAAD,CAAoB2C,GAAG,QAAQD,UAAU,iBACxC,kBAACH,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,MACA,kBAACxC,EAAD,SAIFqB,GAAeF,GAAWC,EAQvB,KAPH,kBAAC3B,EAAD,KACC,kBAACG,EAAD,KACEiC,EAAc,IAAd,YACOC,EAAc,KAAKa,QAAQ,GADlC,eAEKb,EAAYa,QAAQ,GAFzB,OAOFvB,IAAYD,IAAWE,IACvBD,IAAYD,IAAWE,EACxB,kBAAC5B,EAAD,KACC,kBAACG,EAAD,KACE0B,EADF,IACgBE,EADhB,IACgCE,IAG9B,U,GAhHYtB,IAAMwC,WAsHX3C","file":"static/js/9.9289370a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DigitalClockContainer = styled.div`\r\n\twidth: 80%;\r\n\tdisplay: flex;\r\n\tpadding: 1rem;\r\n\tflex-flow: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst DigitalClockItem = styled.span`\r\n\twidth: 80%;\r\n\tdisplay: flex;\r\n\tflex-flow: row nowrap;\r\n\tfont-weight: bold;\r\n\tcolor: white;\r\n\tfont-size: 2.3rem;\r\n\ttext-align: center;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`;\r\n\r\nconst AnalogClockContainer = styled.div`\r\n\tposition: relative;\r\n\theight: auto;\r\n\toverflow: hidden;\r\n\tbackground: #fff;\r\n\twidth: 50%;\r\n\tdisplay: flex;\r\n\r\n\t&.styling {\r\n\t\tbox-shadow: 0px 0px 10px #888888;\r\n\t\tborder-radius: 50%;\r\n\t\tmin-width: 100px;\r\n\t\tmargin-top: 1%;\r\n\t}\r\n\r\n\t&:before {\r\n\t\tcontent: \"\";\r\n\t\tdisplay: block;\r\n\t\tpadding-top: 100%;\r\n\t}\r\n`;\r\n\r\nconst AnalogClockContent = styled.div`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tbottom: 0;\r\n\tright: 0;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`;\r\n\r\nconst AnalogIndicatorCover = styled.div`\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tborder-radius: 50%;\r\n\twidth: 3%;\r\n\theight: 3%;\r\n\tbackground-color: lightgrey;\r\n\tz-index: 5;\r\n`;\r\n\r\nclass Clock extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.child = React.createRef();\r\n\t\tthis.state = {\r\n      today: new Date(),\r\n      startTime: 9,\r\n      endTime: 17,\r\n\t\t\tshowMinutes: true,\r\n\t\t\tshowSeconds: true,\r\n\t\t};\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.intervalID = setInterval(() => this.tick(), 500);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.intervalID);\r\n\t}\r\n\r\n\ttick() {\r\n\t\tthis.setState({\r\n\t\t\ttoday: new Date(),\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\tconst { today, startTime, endTime } = this.state;\r\n\t\tconst { analog, digital, percentage } = this.props;\r\n\r\n\t\tconst currentHour = today.getHours();\r\n\t\tconst currentMinute = today.getMinutes();\r\n\t\tconst currentSecond = today.getSeconds();\r\n\r\n\t\tconst workDayLength = endTime - startTime;\r\n\r\n\t\tconst calcHourPercent = ((currentHour - startTime) / workDayLength) * 100;\r\n\t\tconst calcMinutePercent = (currentMinute / 60 / workDayLength) * 100;\r\n\t\tconst calcSecondPercent = (currentSecond / 60 / 60 / workDayLength) * 100;\r\n\t\tconst calcPercent = calcHourPercent + calcMinutePercent + calcSecondPercent;\r\n\t\tconst showPercent = Math.round((calcPercent + Number.EPSILON) * 100) / 100;\r\n\r\n\t\tconst hoursDegrees = currentHour * 30 + currentMinute / 2;\r\n\t\tconst minutesDegrees = currentMinute * 6 + currentSecond / 10;\r\n\t\tconst secondsDegrees = currentSecond * 6;\r\n\r\n\t\tconst AnalogStyledHours = styled.div`\r\n\t\t\ttransform: rotateZ(${hoursDegrees}deg);\r\n\t\t\tborder-radius: 10px;\r\n\t\t\ttransform-origin: bottom;\r\n\t\t\toutline: 1px solid transparent;\r\n\t\t\tposition: absolute;\r\n\t\t\tbottom: 50%;\r\n\t\t\twidth: 1.5%;\r\n\t\t\theight: 22.5%;\r\n\t\t\tz-index: 4;\r\n\t\t\tbackground-color: #8f9c6c;\r\n\t\t`;\r\n\r\n\t\tconst AnalogStyledMinutes = styled.div`\r\n\t\t\ttransform: rotateZ(${minutesDegrees}deg);\r\n\t\t\tborder-radius: 10px;\r\n\t\t\ttransform-origin: bottom;\r\n\t\t\toutline: 1px solid transparent;\r\n\t\t\tposition: absolute;\r\n\t\t\tbottom: 50%;\r\n\t\t\twidth: 1%;\r\n\t\t\theight: 30%;\r\n\t\t\tz-index: 3;\r\n\t\t\tbackground-color: #cd6a51;\r\n\t\t`;\r\n\r\n\t\tconst AnalogStyledSeconds = styled.div`\r\n\t\t\ttransform: rotateZ(${secondsDegrees}deg);\r\n\t\t\tborder-radius: 10px;\r\n\t\t\ttransform-origin: bottom;\r\n\t\t\toutline: 1px solid transparent;\r\n\t\t\tposition: absolute;\r\n\t\t\tbottom: 50%;\r\n\t\t\twidth: 0.5%;\r\n\t\t\theight: 37.5%;\r\n\t\t\tz-index: 2;\r\n\t\t\tbackground-color: #dfc48c;\r\n\t\t`;\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{analog && !digital && !percentage ? (\r\n\t\t\t\t\t<AnalogClockContainer className=\"clock-container styling\">\r\n\t\t\t\t\t\t<AnalogClockContent id=\"clock\" className=\"clock-content\">\r\n\t\t\t\t\t\t\t<AnalogStyledHours />\r\n\t\t\t\t\t\t\t<AnalogStyledMinutes />\r\n\t\t\t\t\t\t\t<AnalogStyledSeconds />\r\n\t\t\t\t\t\t\t<AnalogIndicatorCover />\r\n\t\t\t\t\t\t</AnalogClockContent>\r\n\t\t\t\t\t</AnalogClockContainer>\r\n\t\t\t\t) : null}\r\n\t\t\t\t{percentage && !analog && !digital ? (\r\n\t\t\t\t\t<DigitalClockContainer>\r\n\t\t\t\t\t\t<DigitalClockItem>\r\n\t\t\t\t\t\t\t{calcPercent > 100\r\n\t\t\t\t\t\t\t\t? `+${(showPercent - 100).toFixed(2)}%`\r\n\t\t\t\t\t\t\t\t: `${showPercent.toFixed(2)}%`}\r\n\t\t\t\t\t\t</DigitalClockItem>\r\n\t\t\t\t\t</DigitalClockContainer>\r\n\t\t\t\t) : null}\r\n\r\n\t\t\t\t{(digital && !analog && !percentage) ||\r\n\t\t\t\t(!digital && !analog && !percentage) ? (\r\n\t\t\t\t\t<DigitalClockContainer>\r\n\t\t\t\t\t\t<DigitalClockItem>\r\n\t\t\t\t\t\t\t{currentHour}:{currentMinute}:{currentSecond}\r\n\t\t\t\t\t\t</DigitalClockItem>\r\n\t\t\t\t\t</DigitalClockContainer>\r\n\t\t\t\t) : null}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Clock;\r\n"],"sourceRoot":""}